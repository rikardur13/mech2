
test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d64  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000558  20070000  00080d64  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  2 .bss          00000944  20070558  000812bc  00020558  2**2
                  ALLOC
  3 .stack        00002004  20070e9c  00081c00  00020558  2**0
                  ALLOC
  4 .ARM.attributes 00000029  00000000  00000000  00020558  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020581  2**0
                  CONTENTS, READONLY
  6 .debug_info   00007d7d  00000000  00000000  000205da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000161c  00000000  00000000  00028357  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000025ad  00000000  00000000  00029973  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000005a0  00000000  00000000  0002bf20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000004e8  00000000  00000000  0002c4c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00016756  00000000  00000000  0002c9a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000ab20  00000000  00000000  000430fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00061c38  00000000  00000000  0004dc1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000c78  00000000  00000000  000af858  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072ea0 	.word	0x20072ea0
   80004:	000809c5 	.word	0x000809c5
   80008:	000809c1 	.word	0x000809c1
   8000c:	000809c1 	.word	0x000809c1
   80010:	000809c1 	.word	0x000809c1
   80014:	000809c1 	.word	0x000809c1
   80018:	000809c1 	.word	0x000809c1
	...
   8002c:	000809c1 	.word	0x000809c1
   80030:	000809c1 	.word	0x000809c1
   80034:	00000000 	.word	0x00000000
   80038:	000809c1 	.word	0x000809c1
   8003c:	000809c1 	.word	0x000809c1
   80040:	000809c1 	.word	0x000809c1
   80044:	000809c1 	.word	0x000809c1
   80048:	000809c1 	.word	0x000809c1
   8004c:	000809c1 	.word	0x000809c1
   80050:	000809c1 	.word	0x000809c1
   80054:	000809c1 	.word	0x000809c1
   80058:	000809c1 	.word	0x000809c1
   8005c:	000809c1 	.word	0x000809c1
   80060:	000809c1 	.word	0x000809c1
   80064:	000809c1 	.word	0x000809c1
   80068:	00000000 	.word	0x00000000
   8006c:	000801d5 	.word	0x000801d5
   80070:	00080845 	.word	0x00080845
   80074:	00080859 	.word	0x00080859
   80078:	0008086d 	.word	0x0008086d
	...
   80084:	000809c1 	.word	0x000809c1
   80088:	000809c1 	.word	0x000809c1
   8008c:	000809c1 	.word	0x000809c1
   80090:	000809c1 	.word	0x000809c1
   80094:	000809c1 	.word	0x000809c1
   80098:	000809c1 	.word	0x000809c1
   8009c:	000809c1 	.word	0x000809c1
   800a0:	000809c1 	.word	0x000809c1
   800a4:	00000000 	.word	0x00000000
   800a8:	000809c1 	.word	0x000809c1
   800ac:	00080431 	.word	0x00080431
   800b0:	00080459 	.word	0x00080459
   800b4:	00080481 	.word	0x00080481
   800b8:	000804ad 	.word	0x000804ad
   800bc:	000809c1 	.word	0x000809c1
   800c0:	000809c1 	.word	0x000809c1
   800c4:	000809c1 	.word	0x000809c1
   800c8:	000809c1 	.word	0x000809c1
   800cc:	000804d5 	.word	0x000804d5
   800d0:	000809c1 	.word	0x000809c1
   800d4:	000809c1 	.word	0x000809c1
   800d8:	000809c1 	.word	0x000809c1
   800dc:	000809c1 	.word	0x000809c1
   800e0:	000809c1 	.word	0x000809c1
   800e4:	000809c1 	.word	0x000809c1
   800e8:	000809c1 	.word	0x000809c1
   800ec:	000809c1 	.word	0x000809c1
   800f0:	000809c1 	.word	0x000809c1

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070558 	.word	0x20070558
   80110:	00000000 	.word	0x00000000
   80114:	00080d64 	.word	0x00080d64

00080118 <frame_dummy>:
   80118:	4b08      	ldr	r3, [pc, #32]	; (8013c <frame_dummy+0x24>)
   8011a:	b510      	push	{r4, lr}
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4908      	ldr	r1, [pc, #32]	; (80140 <frame_dummy+0x28>)
   80120:	4808      	ldr	r0, [pc, #32]	; (80144 <frame_dummy+0x2c>)
   80122:	f3af 8000 	nop.w
   80126:	4808      	ldr	r0, [pc, #32]	; (80148 <frame_dummy+0x30>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b903      	cbnz	r3, 8012e <frame_dummy+0x16>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	4b07      	ldr	r3, [pc, #28]	; (8014c <frame_dummy+0x34>)
   80130:	2b00      	cmp	r3, #0
   80132:	d0fb      	beq.n	8012c <frame_dummy+0x14>
   80134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80138:	4718      	bx	r3
   8013a:	bf00      	nop
   8013c:	00000000 	.word	0x00000000
   80140:	2007055c 	.word	0x2007055c
   80144:	00080d64 	.word	0x00080d64
   80148:	00080d64 	.word	0x00080d64
   8014c:	00000000 	.word	0x00000000

00080150 <enable_interrupt_vector>:
	TC2    2    TC8_IRQn    TC8_Handler    ID_TC8                         
	*/
/************************************************************************/

void enable_interrupt_vector(uint32_t irqn, uint32_t priority)
{
   80150:	b410      	push	{r4}
	NVIC_DisableIRQ(irqn);
   80152:	b242      	sxtb	r2, r0

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
   80154:	b2c0      	uxtb	r0, r0
   80156:	f000 041f 	and.w	r4, r0, #31
   8015a:	2301      	movs	r3, #1
   8015c:	fa03 f404 	lsl.w	r4, r3, r4
   80160:	0953      	lsrs	r3, r2, #5
   80162:	009b      	lsls	r3, r3, #2
   80164:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80168:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
   8016c:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
   80170:	f8c3 4180 	str.w	r4, [r3, #384]	; 0x180
    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
   80174:	2a00      	cmp	r2, #0
   80176:	da06      	bge.n	80186 <enable_interrupt_vector+0x36>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
   80178:	f000 000f 	and.w	r0, r0, #15
   8017c:	0109      	lsls	r1, r1, #4
   8017e:	b2c9      	uxtb	r1, r1
   80180:	4a06      	ldr	r2, [pc, #24]	; (8019c <enable_interrupt_vector+0x4c>)
   80182:	5411      	strb	r1, [r2, r0]
   80184:	e007      	b.n	80196 <enable_interrupt_vector+0x46>
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   80186:	0109      	lsls	r1, r1, #4
   80188:	b2c9      	uxtb	r1, r1
   8018a:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   8018e:	f502 4261 	add.w	r2, r2, #57600	; 0xe100
   80192:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80196:	601c      	str	r4, [r3, #0]
	NVIC_ClearPendingIRQ(irqn);
	NVIC_SetPriority(irqn, priority);
	NVIC_EnableIRQ(irqn);
}
   80198:	bc10      	pop	{r4}
   8019a:	4770      	bx	lr
   8019c:	e000ed14 	.word	0xe000ed14

000801a0 <interrupts_init1>:
------------------------------Initialize ------------------------------
-----------------------------------------------------------------------
*/

void interrupts_init1(void)
{
   801a0:	b538      	push	{r3, r4, r5, lr}
	/* Enable interrupt registers */
	PMC->PMC_PCER0	=	(1 << ID_PIOA);			// Enable the peripheral clock for port A
   801a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
   801a6:	4b08      	ldr	r3, [pc, #32]	; (801c8 <interrupts_init1+0x28>)
   801a8:	611a      	str	r2, [r3, #16]
	
	PIOA->PIO_IER	=	PIO_PA7;				// Enable the interrupt register on pin 7 in port A
   801aa:	4c08      	ldr	r4, [pc, #32]	; (801cc <interrupts_init1+0x2c>)
   801ac:	2580      	movs	r5, #128	; 0x80
   801ae:	6425      	str	r5, [r4, #64]	; 0x40
	enable_interrupt_vector(PIOA_IRQn, 0);		// Enable nested interrupt vector and set priority 0 in port A
   801b0:	2100      	movs	r1, #0
   801b2:	200b      	movs	r0, #11
   801b4:	4b06      	ldr	r3, [pc, #24]	; (801d0 <interrupts_init1+0x30>)
   801b6:	4798      	blx	r3
	
	/*	Interrupt on rising edge		*/
	PIOA->PIO_AIMER	=	PIO_PA7;				// Enable additional interrupt modes
   801b8:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
	PIOA->PIO_ESR	=	PIO_PA7;				// Select edge detection
   801bc:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
	PIOA->PIO_REHLSR=	PIO_PA7;				// Select rising edge detection
   801c0:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
   801c4:	bd38      	pop	{r3, r4, r5, pc}
   801c6:	bf00      	nop
   801c8:	400e0600 	.word	0x400e0600
   801cc:	400e0e00 	.word	0x400e0e00
   801d0:	00080151 	.word	0x00080151

000801d4 <PIOA_Handler>:
-----------------------------------------------------------------------
*/


void PIOA_Handler(void)
{
   801d4:	b508      	push	{r3, lr}
	uint32_t readpio	=	PIOA->PIO_ISR;									// !!!!!CRUTIAL!!!!! for the handler to work
   801d6:	4b2a      	ldr	r3, [pc, #168]	; (80280 <PIOA_Handler+0xac>)
   801d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
	
	CurrCycleTime	=	TC2->TC_CHANNEL[2].TC_CV - PrevCycleCounts;
   801da:	482a      	ldr	r0, [pc, #168]	; (80284 <PIOA_Handler+0xb0>)
   801dc:	f8d0 3090 	ldr.w	r3, [r0, #144]	; 0x90
   801e0:	4929      	ldr	r1, [pc, #164]	; (80288 <PIOA_Handler+0xb4>)
   801e2:	680a      	ldr	r2, [r1, #0]
   801e4:	1a9a      	subs	r2, r3, r2
   801e6:	4b29      	ldr	r3, [pc, #164]	; (8028c <PIOA_Handler+0xb8>)
   801e8:	601a      	str	r2, [r3, #0]
	PrevCycleCounts = TC2->TC_CHANNEL[2].TC_CV;
   801ea:	f8d0 3090 	ldr.w	r3, [r0, #144]	; 0x90
   801ee:	600b      	str	r3, [r1, #0]

	
	if (CurrCycleTime > (PrevCycleTime*15)/10)
   801f0:	4b27      	ldr	r3, [pc, #156]	; (80290 <PIOA_Handler+0xbc>)
   801f2:	681b      	ldr	r3, [r3, #0]
   801f4:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
   801f8:	4926      	ldr	r1, [pc, #152]	; (80294 <PIOA_Handler+0xc0>)
   801fa:	fba1 1303 	umull	r1, r3, r1, r3
   801fe:	ebb2 0fd3 	cmp.w	r2, r3, lsr #3
   80202:	d90a      	bls.n	8021a <PIOA_Handler+0x46>
	{
		CrankTooth = 0;
   80204:	2200      	movs	r2, #0
   80206:	4b24      	ldr	r3, [pc, #144]	; (80298 <PIOA_Handler+0xc4>)
   80208:	601a      	str	r2, [r3, #0]
		SecondCrankInterval = 11 - math_ign_time_teeth(DEGREE_TEST);
   8020a:	2095      	movs	r0, #149	; 0x95
   8020c:	4b23      	ldr	r3, [pc, #140]	; (8029c <PIOA_Handler+0xc8>)
   8020e:	4798      	blx	r3
   80210:	f1c0 000b 	rsb	r0, r0, #11
   80214:	4b22      	ldr	r3, [pc, #136]	; (802a0 <PIOA_Handler+0xcc>)
   80216:	7018      	strb	r0, [r3, #0]
   80218:	e00a      	b.n	80230 <PIOA_Handler+0x5c>
	}
	else if (CrankTooth == 12)
   8021a:	4b1f      	ldr	r3, [pc, #124]	; (80298 <PIOA_Handler+0xc4>)
   8021c:	681b      	ldr	r3, [r3, #0]
   8021e:	2b0c      	cmp	r3, #12
   80220:	d106      	bne.n	80230 <PIOA_Handler+0x5c>
	{
		FirtCrankInterval = 23 - math_ign_time_teeth(DEGREE_TEST);
   80222:	2095      	movs	r0, #149	; 0x95
   80224:	4b1d      	ldr	r3, [pc, #116]	; (8029c <PIOA_Handler+0xc8>)
   80226:	4798      	blx	r3
   80228:	f1c0 0017 	rsb	r0, r0, #23
   8022c:	4b1d      	ldr	r3, [pc, #116]	; (802a4 <PIOA_Handler+0xd0>)
   8022e:	7018      	strb	r0, [r3, #0]
	}
	
	if (CrankTooth == FirtCrankInterval)
   80230:	4b1c      	ldr	r3, [pc, #112]	; (802a4 <PIOA_Handler+0xd0>)
   80232:	781a      	ldrb	r2, [r3, #0]
   80234:	4b18      	ldr	r3, [pc, #96]	; (80298 <PIOA_Handler+0xc4>)
   80236:	681b      	ldr	r3, [r3, #0]
   80238:	429a      	cmp	r2, r3
   8023a:	d108      	bne.n	8024e <PIOA_Handler+0x7a>
	{		
		TC0->TC_CHANNEL[1].TC_RA	=	math_ign_time_interval(DEGREE_TEST, PrevCycleTime);
   8023c:	4b14      	ldr	r3, [pc, #80]	; (80290 <PIOA_Handler+0xbc>)
   8023e:	6819      	ldr	r1, [r3, #0]
   80240:	2095      	movs	r0, #149	; 0x95
   80242:	4b19      	ldr	r3, [pc, #100]	; (802a8 <PIOA_Handler+0xd4>)
   80244:	4798      	blx	r3
   80246:	4b19      	ldr	r3, [pc, #100]	; (802ac <PIOA_Handler+0xd8>)
   80248:	6558      	str	r0, [r3, #84]	; 0x54
		TC0->TC_CHANNEL[1].TC_CCR	=	TC_CCR_SWTRG	|	TC_CCR_CLKEN;
   8024a:	2205      	movs	r2, #5
   8024c:	641a      	str	r2, [r3, #64]	; 0x40
	}
	if (CrankTooth == SecondCrankInterval)
   8024e:	4b14      	ldr	r3, [pc, #80]	; (802a0 <PIOA_Handler+0xcc>)
   80250:	781a      	ldrb	r2, [r3, #0]
   80252:	4b11      	ldr	r3, [pc, #68]	; (80298 <PIOA_Handler+0xc4>)
   80254:	681b      	ldr	r3, [r3, #0]
   80256:	429a      	cmp	r2, r3
   80258:	d108      	bne.n	8026c <PIOA_Handler+0x98>
	{
		TC0->TC_CHANNEL[0].TC_RA	=	math_ign_time_interval(DEGREE_TEST, PrevCycleTime);
   8025a:	4b0d      	ldr	r3, [pc, #52]	; (80290 <PIOA_Handler+0xbc>)
   8025c:	6819      	ldr	r1, [r3, #0]
   8025e:	2095      	movs	r0, #149	; 0x95
   80260:	4b11      	ldr	r3, [pc, #68]	; (802a8 <PIOA_Handler+0xd4>)
   80262:	4798      	blx	r3
   80264:	4b11      	ldr	r3, [pc, #68]	; (802ac <PIOA_Handler+0xd8>)
   80266:	6158      	str	r0, [r3, #20]
		TC0->TC_CHANNEL[0].TC_CCR	=	TC_CCR_SWTRG	|	TC_CCR_CLKEN;
   80268:	2205      	movs	r2, #5
   8026a:	601a      	str	r2, [r3, #0]
	}
	CrankTooth++;
   8026c:	4a0a      	ldr	r2, [pc, #40]	; (80298 <PIOA_Handler+0xc4>)
   8026e:	6813      	ldr	r3, [r2, #0]
   80270:	3301      	adds	r3, #1
   80272:	6013      	str	r3, [r2, #0]
	PrevCycleTime	=	CurrCycleTime;
   80274:	4b05      	ldr	r3, [pc, #20]	; (8028c <PIOA_Handler+0xb8>)
   80276:	681a      	ldr	r2, [r3, #0]
   80278:	4b05      	ldr	r3, [pc, #20]	; (80290 <PIOA_Handler+0xbc>)
   8027a:	601a      	str	r2, [r3, #0]
   8027c:	bd08      	pop	{r3, pc}
   8027e:	bf00      	nop
   80280:	400e0e00 	.word	0x400e0e00
   80284:	40088000 	.word	0x40088000
   80288:	20070df0 	.word	0x20070df0
   8028c:	20070df8 	.word	0x20070df8
   80290:	20070e94 	.word	0x20070e94
   80294:	cccccccd 	.word	0xcccccccd
   80298:	20070e98 	.word	0x20070e98
   8029c:	000802b1 	.word	0x000802b1
   802a0:	20070df6 	.word	0x20070df6
   802a4:	20070dec 	.word	0x20070dec
   802a8:	000802e9 	.word	0x000802e9
   802ac:	40080000 	.word	0x40080000

000802b0 <math_ign_time_teeth>:
}


uint16_t math_ign_time_teeth(uint8_t ign_degree)
{
	return	((((CRANK_DEGREE_INTERVAL - ign_degree) * 100) / CRANK_DEGREE_INTERVAL) * CRANK_TEETH)/TACH_EVENTS/100;
   802b0:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
   802b4:	2364      	movs	r3, #100	; 0x64
   802b6:	fb03 f000 	mul.w	r0, r3, r0
   802ba:	4b09      	ldr	r3, [pc, #36]	; (802e0 <math_ign_time_teeth+0x30>)
   802bc:	fb83 2300 	smull	r2, r3, r3, r0
   802c0:	4403      	add	r3, r0
   802c2:	17c0      	asrs	r0, r0, #31
   802c4:	ebc0 13e3 	rsb	r3, r0, r3, asr #7
   802c8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   802cc:	00db      	lsls	r3, r3, #3
   802ce:	4805      	ldr	r0, [pc, #20]	; (802e4 <math_ign_time_teeth+0x34>)
   802d0:	fb80 2003 	smull	r2, r0, r0, r3
   802d4:	17db      	asrs	r3, r3, #31
   802d6:	ebc3 10a0 	rsb	r0, r3, r0, asr #6
}
   802da:	b280      	uxth	r0, r0
   802dc:	4770      	bx	lr
   802de:	bf00      	nop
   802e0:	b60b60b7 	.word	0xb60b60b7
   802e4:	51eb851f 	.word	0x51eb851f

000802e8 <math_ign_time_interval>:


uint32_t math_ign_time_interval(uint8_t ign_degree, uint32_t toothInterval)
{
   802e8:	b538      	push	{r3, r4, r5, lr}
   802ea:	4604      	mov	r4, r0
   802ec:	460d      	mov	r5, r1
	uint32_t temp1 = ((((CRANK_DEGREE_INTERVAL - ign_degree) * 10000) / CRANK_DEGREE_INTERVAL) * CRANK_TEETH)/TACH_EVENTS;
	uint32_t temp2 = math_ign_time_teeth(ign_degree) *10000;
   802ee:	4b0e      	ldr	r3, [pc, #56]	; (80328 <math_ign_time_interval+0x40>)
   802f0:	4798      	blx	r3
	return (10000 - (temp1 - temp2))*toothInterval/10000;
   802f2:	f1c4 04b4 	rsb	r4, r4, #180	; 0xb4
   802f6:	f242 7210 	movw	r2, #10000	; 0x2710
   802fa:	fb02 f304 	mul.w	r3, r2, r4
   802fe:	490b      	ldr	r1, [pc, #44]	; (8032c <math_ign_time_interval+0x44>)
   80300:	fb81 4103 	smull	r4, r1, r1, r3
   80304:	4419      	add	r1, r3
   80306:	17db      	asrs	r3, r3, #31
   80308:	ebc3 13e1 	rsb	r3, r3, r1, asr #7
   8030c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   80310:	eba2 0383 	sub.w	r3, r2, r3, lsl #2
   80314:	fb02 3000 	mla	r0, r2, r0, r3
   80318:	fb05 f500 	mul.w	r5, r5, r0
   8031c:	4804      	ldr	r0, [pc, #16]	; (80330 <math_ign_time_interval+0x48>)
   8031e:	fba0 3005 	umull	r3, r0, r0, r5
   80322:	0b40      	lsrs	r0, r0, #13
   80324:	bd38      	pop	{r3, r4, r5, pc}
   80326:	bf00      	nop
   80328:	000802b1 	.word	0x000802b1
   8032c:	b60b60b7 	.word	0xb60b60b7
   80330:	d1b71759 	.word	0xd1b71759

00080334 <timers_init1>:
-----------------------------------------------------------------------
*/

// Cylinder 1
void timers_init1(void)
{
   80334:	b508      	push	{r3, lr}
	PMC->PMC_PCER0	=	(1 << ID_TC0);									// Enable peripheral clock for timer 0
   80336:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8033a:	4b07      	ldr	r3, [pc, #28]	; (80358 <timers_init1+0x24>)
   8033c:	611a      	str	r2, [r3, #16]
	enable_interrupt_vector(TC0_IRQn, 1);								// Enable nested vector interrupt for timer 0
   8033e:	2101      	movs	r1, #1
   80340:	201b      	movs	r0, #27
   80342:	4b06      	ldr	r3, [pc, #24]	; (8035c <timers_init1+0x28>)
   80344:	4798      	blx	r3
	
	TC0->TC_CHANNEL[0].TC_IER	=	TC_IER_COVFS	|	TC_IER_CPAS;	// Enable Counter overflow interrupt (COVFS) and RA compare interrupt (CPAS)
   80346:	4b06      	ldr	r3, [pc, #24]	; (80360 <timers_init1+0x2c>)
   80348:	2205      	movs	r2, #5
   8034a:	625a      	str	r2, [r3, #36]	; 0x24
	
	Where MCK is the master clock (84 MHz for the Arduino Due) and SLCK is the slow clock 
	(which can be clocked at 32.768 kHz by Y2 on the Arduino Due).
	*/	
	/* TC Channel mode register (MCK / 2) */
	TC0->TC_CHANNEL[0].TC_CMR	=	TC_CMR_TCCLKS_TIMER_CLOCK1	|	TC_CMR_WAVE;	
   8034c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
   80350:	6059      	str	r1, [r3, #4]
	
	/* TC channel control register, enable counter */
	TC0->TC_CHANNEL[0].TC_CCR	=	TC_CCR_SWTRG	|	TC_CCR_CLKEN;		
   80352:	601a      	str	r2, [r3, #0]
   80354:	bd08      	pop	{r3, pc}
   80356:	bf00      	nop
   80358:	400e0600 	.word	0x400e0600
   8035c:	00080151 	.word	0x00080151
   80360:	40080000 	.word	0x40080000

00080364 <timers_init2>:
}

// Cylinder 2
void timers_init2(void)
{
   80364:	b508      	push	{r3, lr}
	PMC->PMC_PCER0	=	(1 << ID_TC1);			// Enable peripheral clock for timer 0
   80366:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   8036a:	4b07      	ldr	r3, [pc, #28]	; (80388 <timers_init2+0x24>)
   8036c:	611a      	str	r2, [r3, #16]
	enable_interrupt_vector(TC1_IRQn, 2);		// Enable nested vector interrupt for timer 0
   8036e:	2102      	movs	r1, #2
   80370:	201c      	movs	r0, #28
   80372:	4b06      	ldr	r3, [pc, #24]	; (8038c <timers_init2+0x28>)
   80374:	4798      	blx	r3
	
	TC0->TC_CHANNEL[1].TC_IER	=	TC_IER_COVFS	|	TC_IER_CPAS;
   80376:	4b06      	ldr	r3, [pc, #24]	; (80390 <timers_init2+0x2c>)
   80378:	2205      	movs	r2, #5
   8037a:	665a      	str	r2, [r3, #100]	; 0x64
	
	Where MCK is the master clock (84 MHz for the Arduino Due) and SLCK is the slow clock 
	(which can be clocked at 32.768 kHz by Y2 on the Arduino Due).
	*/	
	/* TC Channel mode register (MCK / 2) */
	TC0->TC_CHANNEL[1].TC_CMR	=	TC_CMR_TCCLKS_TIMER_CLOCK1	|	TC_CMR_WAVE;
   8037c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
   80380:	6459      	str	r1, [r3, #68]	; 0x44
		
	/* TC channel control register, enable counter */
	TC0->TC_CHANNEL[1].TC_CCR	=	TC_CCR_SWTRG	|	TC_CCR_CLKEN;
   80382:	641a      	str	r2, [r3, #64]	; 0x40
   80384:	bd08      	pop	{r3, pc}
   80386:	bf00      	nop
   80388:	400e0600 	.word	0x400e0600
   8038c:	00080151 	.word	0x00080151
   80390:	40080000 	.word	0x40080000

00080394 <timers_init3>:
}

// Cylinder 3
void timers_init3(void)
{
   80394:	b508      	push	{r3, lr}
	PMC->PMC_PCER0	=	(1 << ID_TC2);			// Enable peripheral clock for timer 0
   80396:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   8039a:	4b08      	ldr	r3, [pc, #32]	; (803bc <timers_init3+0x28>)
   8039c:	611a      	str	r2, [r3, #16]
	enable_interrupt_vector(TC2_IRQn, 3);		// Enable nested vector interrupt for timer 0
   8039e:	2103      	movs	r1, #3
   803a0:	201d      	movs	r0, #29
   803a2:	4b07      	ldr	r3, [pc, #28]	; (803c0 <timers_init3+0x2c>)
   803a4:	4798      	blx	r3
	
	TC0->TC_CHANNEL[2].TC_IER	=	TC_IER_COVFS	|	TC_IER_CPAS;
   803a6:	4b07      	ldr	r3, [pc, #28]	; (803c4 <timers_init3+0x30>)
   803a8:	2205      	movs	r2, #5
   803aa:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	
	Where MCK is the master clock (84 MHz for the Arduino Due) and SLCK is the slow clock 
	(which can be clocked at 32.768 kHz by Y2 on the Arduino Due).
	*/	
	/* TC Channel mode register (MCK / 2) */
	TC0->TC_CHANNEL[2].TC_CMR	=	TC_CMR_TCCLKS_TIMER_CLOCK1	|	TC_CMR_WAVE;
   803ae:	f44f 4100 	mov.w	r1, #32768	; 0x8000
   803b2:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
	
	/* TC channel control register, enable counter */
	TC0->TC_CHANNEL[2].TC_CCR	=	TC_CCR_SWTRG	|	TC_CCR_CLKEN;
   803b6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
   803ba:	bd08      	pop	{r3, pc}
   803bc:	400e0600 	.word	0x400e0600
   803c0:	00080151 	.word	0x00080151
   803c4:	40080000 	.word	0x40080000

000803c8 <timers_init4>:
}

// Cylinder 4
void timers_init4(void)
{
   803c8:	b508      	push	{r3, lr}
	PMC->PMC_PCER0	=	(1 << ID_TC3);			// Enable peripheral clock for timer 0
   803ca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
   803ce:	4b07      	ldr	r3, [pc, #28]	; (803ec <timers_init4+0x24>)
   803d0:	611a      	str	r2, [r3, #16]
	enable_interrupt_vector(TC3_IRQn, 4);		// Enable nested vector interrupt for timer 0
   803d2:	2104      	movs	r1, #4
   803d4:	201e      	movs	r0, #30
   803d6:	4b06      	ldr	r3, [pc, #24]	; (803f0 <timers_init4+0x28>)
   803d8:	4798      	blx	r3
	
	TC1->TC_CHANNEL[0].TC_IER	=	TC_IER_COVFS	|	TC_IER_CPAS;
   803da:	4b06      	ldr	r3, [pc, #24]	; (803f4 <timers_init4+0x2c>)
   803dc:	2205      	movs	r2, #5
   803de:	625a      	str	r2, [r3, #36]	; 0x24
	
	Where MCK is the master clock (84 MHz for the Arduino Due) and SLCK is the slow clock 
	(which can be clocked at 32.768 kHz by Y2 on the Arduino Due).
	*/	
	/* TC Channel mode register (MCK / 2) */
	TC1->TC_CHANNEL[0].TC_CMR	=	TC_CMR_TCCLKS_TIMER_CLOCK1	|	TC_CMR_WAVE;
   803e0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
   803e4:	6059      	str	r1, [r3, #4]
		
	/* TC channel control register, enable counter */
	TC1->TC_CHANNEL[0].TC_CCR	=	TC_CCR_SWTRG	|	TC_CCR_CLKEN;
   803e6:	601a      	str	r2, [r3, #0]
   803e8:	bd08      	pop	{r3, pc}
   803ea:	bf00      	nop
   803ec:	400e0600 	.word	0x400e0600
   803f0:	00080151 	.word	0x00080151
   803f4:	40084000 	.word	0x40084000

000803f8 <timers_init9>:
}

// Global timer
void timers_init9(void)
{
   803f8:	b508      	push	{r3, lr}
	PMC->PMC_PCER1	=	(1 << (ID_TC8 - 32));			// Enable peripheral clock for timer 0
   803fa:	2208      	movs	r2, #8
   803fc:	4b09      	ldr	r3, [pc, #36]	; (80424 <timers_init9+0x2c>)
   803fe:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	enable_interrupt_vector(TC8_IRQn, 9);		// Enable nested vector interrupt for timer 0
   80402:	2109      	movs	r1, #9
   80404:	2023      	movs	r0, #35	; 0x23
   80406:	4b08      	ldr	r3, [pc, #32]	; (80428 <timers_init9+0x30>)
   80408:	4798      	blx	r3
	
	TC2->TC_CHANNEL[2].TC_IER	=	TC_IER_COVFS;
   8040a:	4b08      	ldr	r3, [pc, #32]	; (8042c <timers_init9+0x34>)
   8040c:	2201      	movs	r2, #1
   8040e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	
	Where MCK is the master clock (84 MHz for the Arduino Due) and SLCK is the slow clock 
	(which can be clocked at 32.768 kHz by Y2 on the Arduino Due).
	*/	
	/* TC Channel mode register (MCK / 2) */
	TC2->TC_CHANNEL[2].TC_CMR	=	TC_CMR_TCCLKS_TIMER_CLOCK1	|	TC_CMR_WAVE;
   80412:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80416:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		
	/* TC channel control register, enable counter */
	TC2->TC_CHANNEL[2].TC_CCR	=	TC_CCR_SWTRG	|	TC_CCR_CLKEN;
   8041a:	2205      	movs	r2, #5
   8041c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
   80420:	bd08      	pop	{r3, pc}
   80422:	bf00      	nop
   80424:	400e0600 	.word	0x400e0600
   80428:	00080151 	.word	0x00080151
   8042c:	40088000 	.word	0x40088000

00080430 <TC0_Handler>:
*/


void TC0_Handler(void)
{
	uint32_t readtc0	=	TC0->TC_CHANNEL[0].TC_SR;	// Read the Timer/Counter TC0, channel 0, status register
   80430:	4b07      	ldr	r3, [pc, #28]	; (80450 <TC0_Handler+0x20>)
   80432:	6a1b      	ldr	r3, [r3, #32]
	uint32_t status =	PIOC->PIO_ODSR;			// Store the status on pins in port C
   80434:	4b07      	ldr	r3, [pc, #28]	; (80454 <TC0_Handler+0x24>)
   80436:	6b9b      	ldr	r3, [r3, #56]	; 0x38

	/*	Toggle output pin PC23	*/
	if (status & PIO_ODSR_P17)					// AND the status on pins in port C and the status of pin 23
   80438:	f413 3f00 	tst.w	r3, #131072	; 0x20000
	{
		PIOC->PIO_CODR	=	PIO_PC17;			// If PC23 is high,	Clear Output Data Register	-	Sets pin PC23 to low
   8043c:	f44f 3200 	mov.w	r2, #131072	; 0x20000
   80440:	4b04      	ldr	r3, [pc, #16]	; (80454 <TC0_Handler+0x24>)
   80442:	bf14      	ite	ne
   80444:	635a      	strne	r2, [r3, #52]	; 0x34
	}
	else
	{
		PIOC->PIO_SODR	=	PIO_PC17;			// If PC23 is low,	Set Output Data Register	-	Sets pin PC23 to high
   80446:	631a      	streq	r2, [r3, #48]	; 0x30
	}
	TC0->TC_CHANNEL[0].TC_CCR	=	TC_CCR_CLKDIS;
   80448:	2202      	movs	r2, #2
   8044a:	4b01      	ldr	r3, [pc, #4]	; (80450 <TC0_Handler+0x20>)
   8044c:	601a      	str	r2, [r3, #0]
   8044e:	4770      	bx	lr
   80450:	40080000 	.word	0x40080000
   80454:	400e1200 	.word	0x400e1200

00080458 <TC1_Handler>:
}

void TC1_Handler(void)
{
	uint32_t readtc1	=	TC0->TC_CHANNEL[1].TC_SR;	// Read the Timer/Counter TC0, channel 1, status register
   80458:	4b07      	ldr	r3, [pc, #28]	; (80478 <TC1_Handler+0x20>)
   8045a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
	uint32_t status =	PIOC->PIO_ODSR;			// Store the status on pins in port C
   8045c:	4b07      	ldr	r3, [pc, #28]	; (8047c <TC1_Handler+0x24>)
   8045e:	6b9b      	ldr	r3, [r3, #56]	; 0x38

	/*	Toggle output pin PC23	*/
	if (status & PIO_ODSR_P23)					// AND the status on pins in port C and the status of pin 23
   80460:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
	{
		PIOC->PIO_CODR	=	PIO_PC23;			// If PC23 is high,	Clear Output Data Register	-	Sets pin PC23 to low
   80464:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
   80468:	4b04      	ldr	r3, [pc, #16]	; (8047c <TC1_Handler+0x24>)
   8046a:	bf14      	ite	ne
   8046c:	635a      	strne	r2, [r3, #52]	; 0x34
	}
	else
	{
		PIOC->PIO_SODR	=	PIO_PC23;			// If PC23 is low,	Set Output Data Register	-	Sets pin PC23 to high
   8046e:	631a      	streq	r2, [r3, #48]	; 0x30
	}
	TC0->TC_CHANNEL[1].TC_CCR	=	TC_CCR_CLKDIS;
   80470:	2202      	movs	r2, #2
   80472:	4b01      	ldr	r3, [pc, #4]	; (80478 <TC1_Handler+0x20>)
   80474:	641a      	str	r2, [r3, #64]	; 0x40
   80476:	4770      	bx	lr
   80478:	40080000 	.word	0x40080000
   8047c:	400e1200 	.word	0x400e1200

00080480 <TC2_Handler>:
}

void TC2_Handler(void)
{
	uint32_t readtc2	=	TC0->TC_CHANNEL[2].TC_SR;	// Read the Timer/Counter TC0, channel 2, status register
   80480:	4b08      	ldr	r3, [pc, #32]	; (804a4 <TC2_Handler+0x24>)
   80482:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
	uint32_t status =	PIOC->PIO_ODSR;			// Store the status on pins in port C
   80486:	4b08      	ldr	r3, [pc, #32]	; (804a8 <TC2_Handler+0x28>)
   80488:	6b9b      	ldr	r3, [r3, #56]	; 0x38
	
	/*	Toggle output pin PC19	*/
	if (status & PIO_ODSR_P19)					// AND the status on pins in port C and the status of pin 19
   8048a:	f413 2f00 	tst.w	r3, #524288	; 0x80000
	{
		PIOC->PIO_CODR	=	PIO_PC19;			// If PC19 is high,	Clear Output Data Register	-	Sets pin PC19 to low
   8048e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   80492:	4b05      	ldr	r3, [pc, #20]	; (804a8 <TC2_Handler+0x28>)
   80494:	bf14      	ite	ne
   80496:	635a      	strne	r2, [r3, #52]	; 0x34
	}
	else
	{
		PIOC->PIO_SODR	=	PIO_PC19;			// If PC19 is low,	Set Output Data Register	-	Sets pin PC19 to high
   80498:	631a      	streq	r2, [r3, #48]	; 0x30
	}
	TC0->TC_CHANNEL[2].TC_CCR	=	TC_CCR_CLKDIS;
   8049a:	2202      	movs	r2, #2
   8049c:	4b01      	ldr	r3, [pc, #4]	; (804a4 <TC2_Handler+0x24>)
   8049e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
   804a2:	4770      	bx	lr
   804a4:	40080000 	.word	0x40080000
   804a8:	400e1200 	.word	0x400e1200

000804ac <TC3_Handler>:
}


void TC3_Handler(void)
{
	uint32_t readtc3	=	TC1->TC_CHANNEL[0].TC_SR;	// Read the Timer/Counter TC1, channel 0, status register
   804ac:	4b07      	ldr	r3, [pc, #28]	; (804cc <TC3_Handler+0x20>)
   804ae:	6a1b      	ldr	r3, [r3, #32]
	uint32_t status =	PIOC->PIO_ODSR;			// Store the status on pins in port C
   804b0:	4b07      	ldr	r3, [pc, #28]	; (804d0 <TC3_Handler+0x24>)
   804b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
	
	/*	Toggle output pin PC28	*/
	if (status & PIO_ODSR_P28)					// AND the status on pins in port C and the status of pin 28
   804b4:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
	{
		PIOC->PIO_CODR	=	PIO_PC28;			// If PC28 is high,	Clear Output Data Register	-	Sets pin PC28 to low
   804b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   804bc:	4b04      	ldr	r3, [pc, #16]	; (804d0 <TC3_Handler+0x24>)
   804be:	bf14      	ite	ne
   804c0:	635a      	strne	r2, [r3, #52]	; 0x34
	}
	else
	{
		PIOC->PIO_SODR	=	PIO_PC28;			// If PC28 is low,	Set Output Data Register	-	Sets pin PC28 to high
   804c2:	631a      	streq	r2, [r3, #48]	; 0x30
	}
	TC1->TC_CHANNEL[0].TC_CCR	=	TC_CCR_CLKDIS;
   804c4:	2202      	movs	r2, #2
   804c6:	4b01      	ldr	r3, [pc, #4]	; (804cc <TC3_Handler+0x20>)
   804c8:	601a      	str	r2, [r3, #0]
   804ca:	4770      	bx	lr
   804cc:	40084000 	.word	0x40084000
   804d0:	400e1200 	.word	0x400e1200

000804d4 <TC8_Handler>:
}

void TC8_Handler(void)
{
   804d4:	4770      	bx	lr
   804d6:	bf00      	nop

000804d8 <uart_init>:
   804d8:	f44f 7280 	mov.w	r2, #256	; 0x100
   804dc:	4b05      	ldr	r3, [pc, #20]	; (804f4 <uart_init+0x1c>)
   804de:	611a      	str	r2, [r3, #16]
   804e0:	f503 7300 	add.w	r3, r3, #512	; 0x200
   804e4:	2250      	movs	r2, #80	; 0x50
   804e6:	601a      	str	r2, [r3, #0]
   804e8:	f44f 6200 	mov.w	r2, #2048	; 0x800
   804ec:	605a      	str	r2, [r3, #4]
   804ee:	222d      	movs	r2, #45	; 0x2d
   804f0:	621a      	str	r2, [r3, #32]
   804f2:	4770      	bx	lr
   804f4:	400e0600 	.word	0x400e0600

000804f8 <sysclk_init>:
   804f8:	b510      	push	{r4, lr}
   804fa:	480e      	ldr	r0, [pc, #56]	; (80534 <sysclk_init+0x3c>)
   804fc:	4b0e      	ldr	r3, [pc, #56]	; (80538 <sysclk_init+0x40>)
   804fe:	4798      	blx	r3
   80500:	213e      	movs	r1, #62	; 0x3e
   80502:	2000      	movs	r0, #0
   80504:	4b0d      	ldr	r3, [pc, #52]	; (8053c <sysclk_init+0x44>)
   80506:	4798      	blx	r3
   80508:	4c0d      	ldr	r4, [pc, #52]	; (80540 <sysclk_init+0x48>)
   8050a:	47a0      	blx	r4
   8050c:	2800      	cmp	r0, #0
   8050e:	d0fc      	beq.n	8050a <sysclk_init+0x12>
   80510:	4b0c      	ldr	r3, [pc, #48]	; (80544 <sysclk_init+0x4c>)
   80512:	4798      	blx	r3
   80514:	4a0c      	ldr	r2, [pc, #48]	; (80548 <sysclk_init+0x50>)
   80516:	4b0d      	ldr	r3, [pc, #52]	; (8054c <sysclk_init+0x54>)
   80518:	629a      	str	r2, [r3, #40]	; 0x28
   8051a:	4c0d      	ldr	r4, [pc, #52]	; (80550 <sysclk_init+0x58>)
   8051c:	47a0      	blx	r4
   8051e:	2800      	cmp	r0, #0
   80520:	d0fc      	beq.n	8051c <sysclk_init+0x24>
   80522:	2010      	movs	r0, #16
   80524:	4b0b      	ldr	r3, [pc, #44]	; (80554 <sysclk_init+0x5c>)
   80526:	4798      	blx	r3
   80528:	4b0b      	ldr	r3, [pc, #44]	; (80558 <sysclk_init+0x60>)
   8052a:	4798      	blx	r3
   8052c:	4801      	ldr	r0, [pc, #4]	; (80534 <sysclk_init+0x3c>)
   8052e:	4b02      	ldr	r3, [pc, #8]	; (80538 <sysclk_init+0x40>)
   80530:	4798      	blx	r3
   80532:	bd10      	pop	{r4, pc}
   80534:	0501bd00 	.word	0x0501bd00
   80538:	200700a5 	.word	0x200700a5
   8053c:	000808e9 	.word	0x000808e9
   80540:	0008093d 	.word	0x0008093d
   80544:	0008094d 	.word	0x0008094d
   80548:	200d3f01 	.word	0x200d3f01
   8054c:	400e0600 	.word	0x400e0600
   80550:	0008095d 	.word	0x0008095d
   80554:	00080881 	.word	0x00080881
   80558:	00080a71 	.word	0x00080a71

0008055c <board_init>:
   8055c:	b510      	push	{r4, lr}
   8055e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80562:	4b16      	ldr	r3, [pc, #88]	; (805bc <board_init+0x60>)
   80564:	605a      	str	r2, [r3, #4]
   80566:	200b      	movs	r0, #11
   80568:	4c15      	ldr	r4, [pc, #84]	; (805c0 <board_init+0x64>)
   8056a:	47a0      	blx	r4
   8056c:	200c      	movs	r0, #12
   8056e:	47a0      	blx	r4
   80570:	200d      	movs	r0, #13
   80572:	47a0      	blx	r4
   80574:	200e      	movs	r0, #14
   80576:	47a0      	blx	r4
   80578:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8057c:	203b      	movs	r0, #59	; 0x3b
   8057e:	4c11      	ldr	r4, [pc, #68]	; (805c4 <board_init+0x68>)
   80580:	47a0      	blx	r4
   80582:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80586:	2055      	movs	r0, #85	; 0x55
   80588:	47a0      	blx	r4
   8058a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8058e:	2056      	movs	r0, #86	; 0x56
   80590:	47a0      	blx	r4
   80592:	490d      	ldr	r1, [pc, #52]	; (805c8 <board_init+0x6c>)
   80594:	2068      	movs	r0, #104	; 0x68
   80596:	47a0      	blx	r4
   80598:	490c      	ldr	r1, [pc, #48]	; (805cc <board_init+0x70>)
   8059a:	205c      	movs	r0, #92	; 0x5c
   8059c:	47a0      	blx	r4
   8059e:	4a0c      	ldr	r2, [pc, #48]	; (805d0 <board_init+0x74>)
   805a0:	f44f 7140 	mov.w	r1, #768	; 0x300
   805a4:	480b      	ldr	r0, [pc, #44]	; (805d4 <board_init+0x78>)
   805a6:	4b0c      	ldr	r3, [pc, #48]	; (805d8 <board_init+0x7c>)
   805a8:	4798      	blx	r3
   805aa:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805ae:	202b      	movs	r0, #43	; 0x2b
   805b0:	47a0      	blx	r4
   805b2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805b6:	202a      	movs	r0, #42	; 0x2a
   805b8:	47a0      	blx	r4
   805ba:	bd10      	pop	{r4, pc}
   805bc:	400e1a50 	.word	0x400e1a50
   805c0:	0008096d 	.word	0x0008096d
   805c4:	00080681 	.word	0x00080681
   805c8:	28000079 	.word	0x28000079
   805cc:	28000001 	.word	0x28000001
   805d0:	08000001 	.word	0x08000001
   805d4:	400e0e00 	.word	0x400e0e00
   805d8:	00080755 	.word	0x00080755

000805dc <pio_set_peripheral>:
   805dc:	6442      	str	r2, [r0, #68]	; 0x44
   805de:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   805e2:	d016      	beq.n	80612 <pio_set_peripheral+0x36>
   805e4:	d804      	bhi.n	805f0 <pio_set_peripheral+0x14>
   805e6:	b1c1      	cbz	r1, 8061a <pio_set_peripheral+0x3e>
   805e8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   805ec:	d00a      	beq.n	80604 <pio_set_peripheral+0x28>
   805ee:	e013      	b.n	80618 <pio_set_peripheral+0x3c>
   805f0:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   805f4:	d011      	beq.n	8061a <pio_set_peripheral+0x3e>
   805f6:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   805fa:	d00e      	beq.n	8061a <pio_set_peripheral+0x3e>
   805fc:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80600:	d10a      	bne.n	80618 <pio_set_peripheral+0x3c>
   80602:	4770      	bx	lr
   80604:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80606:	6f03      	ldr	r3, [r0, #112]	; 0x70
   80608:	400b      	ands	r3, r1
   8060a:	ea23 0302 	bic.w	r3, r3, r2
   8060e:	6703      	str	r3, [r0, #112]	; 0x70
   80610:	e002      	b.n	80618 <pio_set_peripheral+0x3c>
   80612:	6f03      	ldr	r3, [r0, #112]	; 0x70
   80614:	4313      	orrs	r3, r2
   80616:	6703      	str	r3, [r0, #112]	; 0x70
   80618:	6042      	str	r2, [r0, #4]
   8061a:	4770      	bx	lr

0008061c <pio_set_input>:
   8061c:	6441      	str	r1, [r0, #68]	; 0x44
   8061e:	f012 0f01 	tst.w	r2, #1
   80622:	bf14      	ite	ne
   80624:	6641      	strne	r1, [r0, #100]	; 0x64
   80626:	6601      	streq	r1, [r0, #96]	; 0x60
   80628:	f012 0f0a 	tst.w	r2, #10
   8062c:	bf14      	ite	ne
   8062e:	6201      	strne	r1, [r0, #32]
   80630:	6241      	streq	r1, [r0, #36]	; 0x24
   80632:	f012 0f02 	tst.w	r2, #2
   80636:	d002      	beq.n	8063e <pio_set_input+0x22>
   80638:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8063c:	e004      	b.n	80648 <pio_set_input+0x2c>
   8063e:	f012 0f08 	tst.w	r2, #8
   80642:	bf18      	it	ne
   80644:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
   80648:	6141      	str	r1, [r0, #20]
   8064a:	6001      	str	r1, [r0, #0]
   8064c:	4770      	bx	lr
   8064e:	bf00      	nop

00080650 <pio_set_output>:
   80650:	b410      	push	{r4}
   80652:	6441      	str	r1, [r0, #68]	; 0x44
   80654:	9c01      	ldr	r4, [sp, #4]
   80656:	b10c      	cbz	r4, 8065c <pio_set_output+0xc>
   80658:	6641      	str	r1, [r0, #100]	; 0x64
   8065a:	e000      	b.n	8065e <pio_set_output+0xe>
   8065c:	6601      	str	r1, [r0, #96]	; 0x60
   8065e:	b10b      	cbz	r3, 80664 <pio_set_output+0x14>
   80660:	6501      	str	r1, [r0, #80]	; 0x50
   80662:	e000      	b.n	80666 <pio_set_output+0x16>
   80664:	6541      	str	r1, [r0, #84]	; 0x54
   80666:	b10a      	cbz	r2, 8066c <pio_set_output+0x1c>
   80668:	6301      	str	r1, [r0, #48]	; 0x30
   8066a:	e000      	b.n	8066e <pio_set_output+0x1e>
   8066c:	6341      	str	r1, [r0, #52]	; 0x34
   8066e:	6101      	str	r1, [r0, #16]
   80670:	6001      	str	r1, [r0, #0]
   80672:	bc10      	pop	{r4}
   80674:	4770      	bx	lr
   80676:	bf00      	nop

00080678 <pio_get_interrupt_status>:
   80678:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
   8067a:	4770      	bx	lr

0008067c <pio_get_interrupt_mask>:
   8067c:	6c80      	ldr	r0, [r0, #72]	; 0x48
   8067e:	4770      	bx	lr

00080680 <pio_configure_pin>:
   80680:	b570      	push	{r4, r5, r6, lr}
   80682:	b082      	sub	sp, #8
   80684:	460d      	mov	r5, r1
   80686:	0943      	lsrs	r3, r0, #5
   80688:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8068c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80690:	025c      	lsls	r4, r3, #9
   80692:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   80696:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8069a:	d030      	beq.n	806fe <pio_configure_pin+0x7e>
   8069c:	d806      	bhi.n	806ac <pio_configure_pin+0x2c>
   8069e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   806a2:	d00a      	beq.n	806ba <pio_configure_pin+0x3a>
   806a4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   806a8:	d018      	beq.n	806dc <pio_configure_pin+0x5c>
   806aa:	e049      	b.n	80740 <pio_configure_pin+0xc0>
   806ac:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   806b0:	d030      	beq.n	80714 <pio_configure_pin+0x94>
   806b2:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   806b6:	d02d      	beq.n	80714 <pio_configure_pin+0x94>
   806b8:	e042      	b.n	80740 <pio_configure_pin+0xc0>
   806ba:	f000 001f 	and.w	r0, r0, #31
   806be:	2601      	movs	r6, #1
   806c0:	4086      	lsls	r6, r0
   806c2:	4632      	mov	r2, r6
   806c4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   806c8:	4620      	mov	r0, r4
   806ca:	4b1f      	ldr	r3, [pc, #124]	; (80748 <pio_configure_pin+0xc8>)
   806cc:	4798      	blx	r3
   806ce:	f015 0f01 	tst.w	r5, #1
   806d2:	bf14      	ite	ne
   806d4:	6666      	strne	r6, [r4, #100]	; 0x64
   806d6:	6626      	streq	r6, [r4, #96]	; 0x60
   806d8:	2001      	movs	r0, #1
   806da:	e032      	b.n	80742 <pio_configure_pin+0xc2>
   806dc:	f000 001f 	and.w	r0, r0, #31
   806e0:	2601      	movs	r6, #1
   806e2:	4086      	lsls	r6, r0
   806e4:	4632      	mov	r2, r6
   806e6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   806ea:	4620      	mov	r0, r4
   806ec:	4b16      	ldr	r3, [pc, #88]	; (80748 <pio_configure_pin+0xc8>)
   806ee:	4798      	blx	r3
   806f0:	f015 0f01 	tst.w	r5, #1
   806f4:	bf14      	ite	ne
   806f6:	6666      	strne	r6, [r4, #100]	; 0x64
   806f8:	6626      	streq	r6, [r4, #96]	; 0x60
   806fa:	2001      	movs	r0, #1
   806fc:	e021      	b.n	80742 <pio_configure_pin+0xc2>
   806fe:	f000 011f 	and.w	r1, r0, #31
   80702:	2601      	movs	r6, #1
   80704:	462a      	mov	r2, r5
   80706:	fa06 f101 	lsl.w	r1, r6, r1
   8070a:	4620      	mov	r0, r4
   8070c:	4b0f      	ldr	r3, [pc, #60]	; (8074c <pio_configure_pin+0xcc>)
   8070e:	4798      	blx	r3
   80710:	4630      	mov	r0, r6
   80712:	e016      	b.n	80742 <pio_configure_pin+0xc2>
   80714:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
   80718:	f000 011f 	and.w	r1, r0, #31
   8071c:	2601      	movs	r6, #1
   8071e:	ea05 0306 	and.w	r3, r5, r6
   80722:	9300      	str	r3, [sp, #0]
   80724:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80728:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8072c:	bf14      	ite	ne
   8072e:	2200      	movne	r2, #0
   80730:	2201      	moveq	r2, #1
   80732:	fa06 f101 	lsl.w	r1, r6, r1
   80736:	4620      	mov	r0, r4
   80738:	4c05      	ldr	r4, [pc, #20]	; (80750 <pio_configure_pin+0xd0>)
   8073a:	47a0      	blx	r4
   8073c:	4630      	mov	r0, r6
   8073e:	e000      	b.n	80742 <pio_configure_pin+0xc2>
   80740:	2000      	movs	r0, #0
   80742:	b002      	add	sp, #8
   80744:	bd70      	pop	{r4, r5, r6, pc}
   80746:	bf00      	nop
   80748:	000805dd 	.word	0x000805dd
   8074c:	0008061d 	.word	0x0008061d
   80750:	00080651 	.word	0x00080651

00080754 <pio_configure_pin_group>:
   80754:	b570      	push	{r4, r5, r6, lr}
   80756:	b082      	sub	sp, #8
   80758:	4605      	mov	r5, r0
   8075a:	460e      	mov	r6, r1
   8075c:	4614      	mov	r4, r2
   8075e:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   80762:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80766:	d026      	beq.n	807b6 <pio_configure_pin_group+0x62>
   80768:	d806      	bhi.n	80778 <pio_configure_pin_group+0x24>
   8076a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8076e:	d00a      	beq.n	80786 <pio_configure_pin_group+0x32>
   80770:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80774:	d013      	beq.n	8079e <pio_configure_pin_group+0x4a>
   80776:	e034      	b.n	807e2 <pio_configure_pin_group+0x8e>
   80778:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8077c:	d01f      	beq.n	807be <pio_configure_pin_group+0x6a>
   8077e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80782:	d01c      	beq.n	807be <pio_configure_pin_group+0x6a>
   80784:	e02d      	b.n	807e2 <pio_configure_pin_group+0x8e>
   80786:	460a      	mov	r2, r1
   80788:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8078c:	4b16      	ldr	r3, [pc, #88]	; (807e8 <pio_configure_pin_group+0x94>)
   8078e:	4798      	blx	r3
   80790:	f014 0f01 	tst.w	r4, #1
   80794:	bf14      	ite	ne
   80796:	666e      	strne	r6, [r5, #100]	; 0x64
   80798:	662e      	streq	r6, [r5, #96]	; 0x60
   8079a:	2001      	movs	r0, #1
   8079c:	e022      	b.n	807e4 <pio_configure_pin_group+0x90>
   8079e:	460a      	mov	r2, r1
   807a0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   807a4:	4b10      	ldr	r3, [pc, #64]	; (807e8 <pio_configure_pin_group+0x94>)
   807a6:	4798      	blx	r3
   807a8:	f014 0f01 	tst.w	r4, #1
   807ac:	bf14      	ite	ne
   807ae:	666e      	strne	r6, [r5, #100]	; 0x64
   807b0:	662e      	streq	r6, [r5, #96]	; 0x60
   807b2:	2001      	movs	r0, #1
   807b4:	e016      	b.n	807e4 <pio_configure_pin_group+0x90>
   807b6:	4b0d      	ldr	r3, [pc, #52]	; (807ec <pio_configure_pin_group+0x98>)
   807b8:	4798      	blx	r3
   807ba:	2001      	movs	r0, #1
   807bc:	e012      	b.n	807e4 <pio_configure_pin_group+0x90>
   807be:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
   807c2:	f004 0301 	and.w	r3, r4, #1
   807c6:	9300      	str	r3, [sp, #0]
   807c8:	f3c4 0380 	ubfx	r3, r4, #2, #1
   807cc:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   807d0:	bf14      	ite	ne
   807d2:	2200      	movne	r2, #0
   807d4:	2201      	moveq	r2, #1
   807d6:	4631      	mov	r1, r6
   807d8:	4628      	mov	r0, r5
   807da:	4c05      	ldr	r4, [pc, #20]	; (807f0 <pio_configure_pin_group+0x9c>)
   807dc:	47a0      	blx	r4
   807de:	2001      	movs	r0, #1
   807e0:	e000      	b.n	807e4 <pio_configure_pin_group+0x90>
   807e2:	2000      	movs	r0, #0
   807e4:	b002      	add	sp, #8
   807e6:	bd70      	pop	{r4, r5, r6, pc}
   807e8:	000805dd 	.word	0x000805dd
   807ec:	0008061d 	.word	0x0008061d
   807f0:	00080651 	.word	0x00080651

000807f4 <pio_handler_process>:
   807f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   807f8:	4604      	mov	r4, r0
   807fa:	4688      	mov	r8, r1
   807fc:	4b0e      	ldr	r3, [pc, #56]	; (80838 <pio_handler_process+0x44>)
   807fe:	4798      	blx	r3
   80800:	4605      	mov	r5, r0
   80802:	4620      	mov	r0, r4
   80804:	4b0d      	ldr	r3, [pc, #52]	; (8083c <pio_handler_process+0x48>)
   80806:	4798      	blx	r3
   80808:	4005      	ands	r5, r0
   8080a:	d013      	beq.n	80834 <pio_handler_process+0x40>
   8080c:	4c0c      	ldr	r4, [pc, #48]	; (80840 <pio_handler_process+0x4c>)
   8080e:	f104 0660 	add.w	r6, r4, #96	; 0x60
   80812:	6823      	ldr	r3, [r4, #0]
   80814:	4543      	cmp	r3, r8
   80816:	d108      	bne.n	8082a <pio_handler_process+0x36>
   80818:	6861      	ldr	r1, [r4, #4]
   8081a:	4229      	tst	r1, r5
   8081c:	d005      	beq.n	8082a <pio_handler_process+0x36>
   8081e:	68e3      	ldr	r3, [r4, #12]
   80820:	4640      	mov	r0, r8
   80822:	4798      	blx	r3
   80824:	6863      	ldr	r3, [r4, #4]
   80826:	ea25 0503 	bic.w	r5, r5, r3
   8082a:	42b4      	cmp	r4, r6
   8082c:	d002      	beq.n	80834 <pio_handler_process+0x40>
   8082e:	3410      	adds	r4, #16
   80830:	2d00      	cmp	r5, #0
   80832:	d1ee      	bne.n	80812 <pio_handler_process+0x1e>
   80834:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80838:	00080679 	.word	0x00080679
   8083c:	0008067d 	.word	0x0008067d
   80840:	20070574 	.word	0x20070574

00080844 <PIOB_Handler>:
   80844:	b508      	push	{r3, lr}
   80846:	210c      	movs	r1, #12
   80848:	4801      	ldr	r0, [pc, #4]	; (80850 <PIOB_Handler+0xc>)
   8084a:	4b02      	ldr	r3, [pc, #8]	; (80854 <PIOB_Handler+0x10>)
   8084c:	4798      	blx	r3
   8084e:	bd08      	pop	{r3, pc}
   80850:	400e1000 	.word	0x400e1000
   80854:	000807f5 	.word	0x000807f5

00080858 <PIOC_Handler>:
   80858:	b508      	push	{r3, lr}
   8085a:	210d      	movs	r1, #13
   8085c:	4801      	ldr	r0, [pc, #4]	; (80864 <PIOC_Handler+0xc>)
   8085e:	4b02      	ldr	r3, [pc, #8]	; (80868 <PIOC_Handler+0x10>)
   80860:	4798      	blx	r3
   80862:	bd08      	pop	{r3, pc}
   80864:	400e1200 	.word	0x400e1200
   80868:	000807f5 	.word	0x000807f5

0008086c <PIOD_Handler>:
   8086c:	b508      	push	{r3, lr}
   8086e:	210e      	movs	r1, #14
   80870:	4801      	ldr	r0, [pc, #4]	; (80878 <PIOD_Handler+0xc>)
   80872:	4b02      	ldr	r3, [pc, #8]	; (8087c <PIOD_Handler+0x10>)
   80874:	4798      	blx	r3
   80876:	bd08      	pop	{r3, pc}
   80878:	400e1400 	.word	0x400e1400
   8087c:	000807f5 	.word	0x000807f5

00080880 <pmc_switch_mck_to_pllack>:
   80880:	4a18      	ldr	r2, [pc, #96]	; (808e4 <pmc_switch_mck_to_pllack+0x64>)
   80882:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80884:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80888:	4318      	orrs	r0, r3
   8088a:	6310      	str	r0, [r2, #48]	; 0x30
   8088c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8088e:	f013 0f08 	tst.w	r3, #8
   80892:	d003      	beq.n	8089c <pmc_switch_mck_to_pllack+0x1c>
   80894:	e009      	b.n	808aa <pmc_switch_mck_to_pllack+0x2a>
   80896:	3b01      	subs	r3, #1
   80898:	d103      	bne.n	808a2 <pmc_switch_mck_to_pllack+0x22>
   8089a:	e01e      	b.n	808da <pmc_switch_mck_to_pllack+0x5a>
   8089c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   808a0:	4910      	ldr	r1, [pc, #64]	; (808e4 <pmc_switch_mck_to_pllack+0x64>)
   808a2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   808a4:	f012 0f08 	tst.w	r2, #8
   808a8:	d0f5      	beq.n	80896 <pmc_switch_mck_to_pllack+0x16>
   808aa:	4a0e      	ldr	r2, [pc, #56]	; (808e4 <pmc_switch_mck_to_pllack+0x64>)
   808ac:	6b13      	ldr	r3, [r2, #48]	; 0x30
   808ae:	f023 0303 	bic.w	r3, r3, #3
   808b2:	f043 0302 	orr.w	r3, r3, #2
   808b6:	6313      	str	r3, [r2, #48]	; 0x30
   808b8:	6e90      	ldr	r0, [r2, #104]	; 0x68
   808ba:	f010 0008 	ands.w	r0, r0, #8
   808be:	d004      	beq.n	808ca <pmc_switch_mck_to_pllack+0x4a>
   808c0:	2000      	movs	r0, #0
   808c2:	4770      	bx	lr
   808c4:	3b01      	subs	r3, #1
   808c6:	d103      	bne.n	808d0 <pmc_switch_mck_to_pllack+0x50>
   808c8:	e009      	b.n	808de <pmc_switch_mck_to_pllack+0x5e>
   808ca:	f44f 6300 	mov.w	r3, #2048	; 0x800
   808ce:	4905      	ldr	r1, [pc, #20]	; (808e4 <pmc_switch_mck_to_pllack+0x64>)
   808d0:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   808d2:	f012 0f08 	tst.w	r2, #8
   808d6:	d0f5      	beq.n	808c4 <pmc_switch_mck_to_pllack+0x44>
   808d8:	4770      	bx	lr
   808da:	2001      	movs	r0, #1
   808dc:	4770      	bx	lr
   808de:	2001      	movs	r0, #1
   808e0:	4770      	bx	lr
   808e2:	bf00      	nop
   808e4:	400e0600 	.word	0x400e0600

000808e8 <pmc_switch_mainck_to_xtal>:
   808e8:	b138      	cbz	r0, 808fa <pmc_switch_mainck_to_xtal+0x12>
   808ea:	4911      	ldr	r1, [pc, #68]	; (80930 <pmc_switch_mainck_to_xtal+0x48>)
   808ec:	6a0b      	ldr	r3, [r1, #32]
   808ee:	4a11      	ldr	r2, [pc, #68]	; (80934 <pmc_switch_mainck_to_xtal+0x4c>)
   808f0:	401a      	ands	r2, r3
   808f2:	4b11      	ldr	r3, [pc, #68]	; (80938 <pmc_switch_mainck_to_xtal+0x50>)
   808f4:	4313      	orrs	r3, r2
   808f6:	620b      	str	r3, [r1, #32]
   808f8:	4770      	bx	lr
   808fa:	480d      	ldr	r0, [pc, #52]	; (80930 <pmc_switch_mainck_to_xtal+0x48>)
   808fc:	6a02      	ldr	r2, [r0, #32]
   808fe:	0209      	lsls	r1, r1, #8
   80900:	b289      	uxth	r1, r1
   80902:	f422 135c 	bic.w	r3, r2, #3604480	; 0x370000
   80906:	f023 0303 	bic.w	r3, r3, #3
   8090a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8090e:	f043 0301 	orr.w	r3, r3, #1
   80912:	430b      	orrs	r3, r1
   80914:	6203      	str	r3, [r0, #32]
   80916:	4602      	mov	r2, r0
   80918:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8091a:	f013 0f01 	tst.w	r3, #1
   8091e:	d0fb      	beq.n	80918 <pmc_switch_mainck_to_xtal+0x30>
   80920:	4a03      	ldr	r2, [pc, #12]	; (80930 <pmc_switch_mainck_to_xtal+0x48>)
   80922:	6a13      	ldr	r3, [r2, #32]
   80924:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80928:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   8092c:	6213      	str	r3, [r2, #32]
   8092e:	4770      	bx	lr
   80930:	400e0600 	.word	0x400e0600
   80934:	fec8fffc 	.word	0xfec8fffc
   80938:	01370002 	.word	0x01370002

0008093c <pmc_osc_is_ready_mainck>:
   8093c:	4b02      	ldr	r3, [pc, #8]	; (80948 <pmc_osc_is_ready_mainck+0xc>)
   8093e:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80940:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80944:	4770      	bx	lr
   80946:	bf00      	nop
   80948:	400e0600 	.word	0x400e0600

0008094c <pmc_disable_pllack>:
   8094c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80950:	4b01      	ldr	r3, [pc, #4]	; (80958 <pmc_disable_pllack+0xc>)
   80952:	629a      	str	r2, [r3, #40]	; 0x28
   80954:	4770      	bx	lr
   80956:	bf00      	nop
   80958:	400e0600 	.word	0x400e0600

0008095c <pmc_is_locked_pllack>:
   8095c:	4b02      	ldr	r3, [pc, #8]	; (80968 <pmc_is_locked_pllack+0xc>)
   8095e:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80960:	f000 0002 	and.w	r0, r0, #2
   80964:	4770      	bx	lr
   80966:	bf00      	nop
   80968:	400e0600 	.word	0x400e0600

0008096c <pmc_enable_periph_clk>:
   8096c:	282c      	cmp	r0, #44	; 0x2c
   8096e:	d81e      	bhi.n	809ae <pmc_enable_periph_clk+0x42>
   80970:	281f      	cmp	r0, #31
   80972:	d80c      	bhi.n	8098e <pmc_enable_periph_clk+0x22>
   80974:	4b11      	ldr	r3, [pc, #68]	; (809bc <pmc_enable_periph_clk+0x50>)
   80976:	699a      	ldr	r2, [r3, #24]
   80978:	2301      	movs	r3, #1
   8097a:	4083      	lsls	r3, r0
   8097c:	4393      	bics	r3, r2
   8097e:	d018      	beq.n	809b2 <pmc_enable_periph_clk+0x46>
   80980:	2301      	movs	r3, #1
   80982:	fa03 f000 	lsl.w	r0, r3, r0
   80986:	4b0d      	ldr	r3, [pc, #52]	; (809bc <pmc_enable_periph_clk+0x50>)
   80988:	6118      	str	r0, [r3, #16]
   8098a:	2000      	movs	r0, #0
   8098c:	4770      	bx	lr
   8098e:	3820      	subs	r0, #32
   80990:	4b0a      	ldr	r3, [pc, #40]	; (809bc <pmc_enable_periph_clk+0x50>)
   80992:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   80996:	2301      	movs	r3, #1
   80998:	4083      	lsls	r3, r0
   8099a:	4393      	bics	r3, r2
   8099c:	d00b      	beq.n	809b6 <pmc_enable_periph_clk+0x4a>
   8099e:	2301      	movs	r3, #1
   809a0:	fa03 f000 	lsl.w	r0, r3, r0
   809a4:	4b05      	ldr	r3, [pc, #20]	; (809bc <pmc_enable_periph_clk+0x50>)
   809a6:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
   809aa:	2000      	movs	r0, #0
   809ac:	4770      	bx	lr
   809ae:	2001      	movs	r0, #1
   809b0:	4770      	bx	lr
   809b2:	2000      	movs	r0, #0
   809b4:	4770      	bx	lr
   809b6:	2000      	movs	r0, #0
   809b8:	4770      	bx	lr
   809ba:	bf00      	nop
   809bc:	400e0600 	.word	0x400e0600

000809c0 <Dummy_Handler>:
   809c0:	e7fe      	b.n	809c0 <Dummy_Handler>
   809c2:	bf00      	nop

000809c4 <Reset_Handler>:
   809c4:	b508      	push	{r3, lr}
   809c6:	4b1e      	ldr	r3, [pc, #120]	; (80a40 <Reset_Handler+0x7c>)
   809c8:	4a1e      	ldr	r2, [pc, #120]	; (80a44 <Reset_Handler+0x80>)
   809ca:	429a      	cmp	r2, r3
   809cc:	d003      	beq.n	809d6 <Reset_Handler+0x12>
   809ce:	4b1e      	ldr	r3, [pc, #120]	; (80a48 <Reset_Handler+0x84>)
   809d0:	4a1b      	ldr	r2, [pc, #108]	; (80a40 <Reset_Handler+0x7c>)
   809d2:	429a      	cmp	r2, r3
   809d4:	d304      	bcc.n	809e0 <Reset_Handler+0x1c>
   809d6:	4b1d      	ldr	r3, [pc, #116]	; (80a4c <Reset_Handler+0x88>)
   809d8:	4a1d      	ldr	r2, [pc, #116]	; (80a50 <Reset_Handler+0x8c>)
   809da:	429a      	cmp	r2, r3
   809dc:	d30f      	bcc.n	809fe <Reset_Handler+0x3a>
   809de:	e01a      	b.n	80a16 <Reset_Handler+0x52>
   809e0:	4917      	ldr	r1, [pc, #92]	; (80a40 <Reset_Handler+0x7c>)
   809e2:	4b1c      	ldr	r3, [pc, #112]	; (80a54 <Reset_Handler+0x90>)
   809e4:	1a5b      	subs	r3, r3, r1
   809e6:	f023 0303 	bic.w	r3, r3, #3
   809ea:	3304      	adds	r3, #4
   809ec:	4a15      	ldr	r2, [pc, #84]	; (80a44 <Reset_Handler+0x80>)
   809ee:	4413      	add	r3, r2
   809f0:	f852 0b04 	ldr.w	r0, [r2], #4
   809f4:	f841 0b04 	str.w	r0, [r1], #4
   809f8:	429a      	cmp	r2, r3
   809fa:	d1f9      	bne.n	809f0 <Reset_Handler+0x2c>
   809fc:	e7eb      	b.n	809d6 <Reset_Handler+0x12>
   809fe:	4b16      	ldr	r3, [pc, #88]	; (80a58 <Reset_Handler+0x94>)
   80a00:	4a16      	ldr	r2, [pc, #88]	; (80a5c <Reset_Handler+0x98>)
   80a02:	1ad2      	subs	r2, r2, r3
   80a04:	f022 0203 	bic.w	r2, r2, #3
   80a08:	441a      	add	r2, r3
   80a0a:	3b04      	subs	r3, #4
   80a0c:	2100      	movs	r1, #0
   80a0e:	f843 1b04 	str.w	r1, [r3], #4
   80a12:	4293      	cmp	r3, r2
   80a14:	d1fb      	bne.n	80a0e <Reset_Handler+0x4a>
   80a16:	4b12      	ldr	r3, [pc, #72]	; (80a60 <Reset_Handler+0x9c>)
   80a18:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80a1c:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80a20:	4910      	ldr	r1, [pc, #64]	; (80a64 <Reset_Handler+0xa0>)
   80a22:	608a      	str	r2, [r1, #8]
   80a24:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80a28:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80a2c:	d203      	bcs.n	80a36 <Reset_Handler+0x72>
   80a2e:	688b      	ldr	r3, [r1, #8]
   80a30:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80a34:	608b      	str	r3, [r1, #8]
   80a36:	4b0c      	ldr	r3, [pc, #48]	; (80a68 <Reset_Handler+0xa4>)
   80a38:	4798      	blx	r3
   80a3a:	4b0c      	ldr	r3, [pc, #48]	; (80a6c <Reset_Handler+0xa8>)
   80a3c:	4798      	blx	r3
   80a3e:	e7fe      	b.n	80a3e <Reset_Handler+0x7a>
   80a40:	20070000 	.word	0x20070000
   80a44:	00080d64 	.word	0x00080d64
   80a48:	20070558 	.word	0x20070558
   80a4c:	20070e9c 	.word	0x20070e9c
   80a50:	20070558 	.word	0x20070558
   80a54:	20070557 	.word	0x20070557
   80a58:	2007055c 	.word	0x2007055c
   80a5c:	20070e9f 	.word	0x20070e9f
   80a60:	00080000 	.word	0x00080000
   80a64:	e000ed00 	.word	0xe000ed00
   80a68:	00080bfd 	.word	0x00080bfd
   80a6c:	00080ba9 	.word	0x00080ba9

00080a70 <SystemCoreClockUpdate>:
   80a70:	4b3e      	ldr	r3, [pc, #248]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80a72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80a74:	f003 0303 	and.w	r3, r3, #3
   80a78:	2b03      	cmp	r3, #3
   80a7a:	d85f      	bhi.n	80b3c <SystemCoreClockUpdate+0xcc>
   80a7c:	e8df f003 	tbb	[pc, r3]
   80a80:	2b2b0e02 	.word	0x2b2b0e02
   80a84:	4b3a      	ldr	r3, [pc, #232]	; (80b70 <SystemCoreClockUpdate+0x100>)
   80a86:	695b      	ldr	r3, [r3, #20]
   80a88:	f013 0f80 	tst.w	r3, #128	; 0x80
   80a8c:	bf14      	ite	ne
   80a8e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
   80a92:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80a96:	4b37      	ldr	r3, [pc, #220]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80a98:	601a      	str	r2, [r3, #0]
   80a9a:	e04f      	b.n	80b3c <SystemCoreClockUpdate+0xcc>
   80a9c:	4b33      	ldr	r3, [pc, #204]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80a9e:	6a1b      	ldr	r3, [r3, #32]
   80aa0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80aa4:	d003      	beq.n	80aae <SystemCoreClockUpdate+0x3e>
   80aa6:	4a34      	ldr	r2, [pc, #208]	; (80b78 <SystemCoreClockUpdate+0x108>)
   80aa8:	4b32      	ldr	r3, [pc, #200]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80aaa:	601a      	str	r2, [r3, #0]
   80aac:	e046      	b.n	80b3c <SystemCoreClockUpdate+0xcc>
   80aae:	4a33      	ldr	r2, [pc, #204]	; (80b7c <SystemCoreClockUpdate+0x10c>)
   80ab0:	4b30      	ldr	r3, [pc, #192]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80ab2:	601a      	str	r2, [r3, #0]
   80ab4:	4b2d      	ldr	r3, [pc, #180]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80ab6:	6a1b      	ldr	r3, [r3, #32]
   80ab8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80abc:	2b10      	cmp	r3, #16
   80abe:	d002      	beq.n	80ac6 <SystemCoreClockUpdate+0x56>
   80ac0:	2b20      	cmp	r3, #32
   80ac2:	d004      	beq.n	80ace <SystemCoreClockUpdate+0x5e>
   80ac4:	e03a      	b.n	80b3c <SystemCoreClockUpdate+0xcc>
   80ac6:	4a2e      	ldr	r2, [pc, #184]	; (80b80 <SystemCoreClockUpdate+0x110>)
   80ac8:	4b2a      	ldr	r3, [pc, #168]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80aca:	601a      	str	r2, [r3, #0]
   80acc:	e036      	b.n	80b3c <SystemCoreClockUpdate+0xcc>
   80ace:	4a2a      	ldr	r2, [pc, #168]	; (80b78 <SystemCoreClockUpdate+0x108>)
   80ad0:	4b28      	ldr	r3, [pc, #160]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80ad2:	601a      	str	r2, [r3, #0]
   80ad4:	e032      	b.n	80b3c <SystemCoreClockUpdate+0xcc>
   80ad6:	4b25      	ldr	r3, [pc, #148]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80ad8:	6a1b      	ldr	r3, [r3, #32]
   80ada:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80ade:	d003      	beq.n	80ae8 <SystemCoreClockUpdate+0x78>
   80ae0:	4a25      	ldr	r2, [pc, #148]	; (80b78 <SystemCoreClockUpdate+0x108>)
   80ae2:	4b24      	ldr	r3, [pc, #144]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80ae4:	601a      	str	r2, [r3, #0]
   80ae6:	e012      	b.n	80b0e <SystemCoreClockUpdate+0x9e>
   80ae8:	4a24      	ldr	r2, [pc, #144]	; (80b7c <SystemCoreClockUpdate+0x10c>)
   80aea:	4b22      	ldr	r3, [pc, #136]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80aec:	601a      	str	r2, [r3, #0]
   80aee:	4b1f      	ldr	r3, [pc, #124]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80af0:	6a1b      	ldr	r3, [r3, #32]
   80af2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80af6:	2b10      	cmp	r3, #16
   80af8:	d002      	beq.n	80b00 <SystemCoreClockUpdate+0x90>
   80afa:	2b20      	cmp	r3, #32
   80afc:	d004      	beq.n	80b08 <SystemCoreClockUpdate+0x98>
   80afe:	e006      	b.n	80b0e <SystemCoreClockUpdate+0x9e>
   80b00:	4a1f      	ldr	r2, [pc, #124]	; (80b80 <SystemCoreClockUpdate+0x110>)
   80b02:	4b1c      	ldr	r3, [pc, #112]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80b04:	601a      	str	r2, [r3, #0]
   80b06:	e002      	b.n	80b0e <SystemCoreClockUpdate+0x9e>
   80b08:	4a1b      	ldr	r2, [pc, #108]	; (80b78 <SystemCoreClockUpdate+0x108>)
   80b0a:	4b1a      	ldr	r3, [pc, #104]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80b0c:	601a      	str	r2, [r3, #0]
   80b0e:	4b17      	ldr	r3, [pc, #92]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80b10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b12:	f003 0303 	and.w	r3, r3, #3
   80b16:	2b02      	cmp	r3, #2
   80b18:	d10d      	bne.n	80b36 <SystemCoreClockUpdate+0xc6>
   80b1a:	4a14      	ldr	r2, [pc, #80]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80b1c:	6a93      	ldr	r3, [r2, #40]	; 0x28
   80b1e:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80b20:	4814      	ldr	r0, [pc, #80]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80b22:	f3c3 410a 	ubfx	r1, r3, #16, #11
   80b26:	6803      	ldr	r3, [r0, #0]
   80b28:	fb01 3303 	mla	r3, r1, r3, r3
   80b2c:	b2d2      	uxtb	r2, r2
   80b2e:	fbb3 f3f2 	udiv	r3, r3, r2
   80b32:	6003      	str	r3, [r0, #0]
   80b34:	e002      	b.n	80b3c <SystemCoreClockUpdate+0xcc>
   80b36:	4a13      	ldr	r2, [pc, #76]	; (80b84 <SystemCoreClockUpdate+0x114>)
   80b38:	4b0e      	ldr	r3, [pc, #56]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80b3a:	601a      	str	r2, [r3, #0]
   80b3c:	4b0b      	ldr	r3, [pc, #44]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80b3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b40:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80b44:	2b70      	cmp	r3, #112	; 0x70
   80b46:	d107      	bne.n	80b58 <SystemCoreClockUpdate+0xe8>
   80b48:	4a0a      	ldr	r2, [pc, #40]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80b4a:	6813      	ldr	r3, [r2, #0]
   80b4c:	490e      	ldr	r1, [pc, #56]	; (80b88 <SystemCoreClockUpdate+0x118>)
   80b4e:	fba1 1303 	umull	r1, r3, r1, r3
   80b52:	085b      	lsrs	r3, r3, #1
   80b54:	6013      	str	r3, [r2, #0]
   80b56:	4770      	bx	lr
   80b58:	4b04      	ldr	r3, [pc, #16]	; (80b6c <SystemCoreClockUpdate+0xfc>)
   80b5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80b5c:	4905      	ldr	r1, [pc, #20]	; (80b74 <SystemCoreClockUpdate+0x104>)
   80b5e:	f3c3 1202 	ubfx	r2, r3, #4, #3
   80b62:	680b      	ldr	r3, [r1, #0]
   80b64:	40d3      	lsrs	r3, r2
   80b66:	600b      	str	r3, [r1, #0]
   80b68:	4770      	bx	lr
   80b6a:	bf00      	nop
   80b6c:	400e0600 	.word	0x400e0600
   80b70:	400e1a10 	.word	0x400e1a10
   80b74:	2007012c 	.word	0x2007012c
   80b78:	00b71b00 	.word	0x00b71b00
   80b7c:	003d0900 	.word	0x003d0900
   80b80:	007a1200 	.word	0x007a1200
   80b84:	0e4e1c00 	.word	0x0e4e1c00
   80b88:	aaaaaaab 	.word	0xaaaaaaab

00080b8c <init_output>:
*/

void init_output(void)
{
		/* Enable simple pin registers */
		PMC->PMC_PCER0	=	(1 << ID_PIOC);			// Peripheral clock enable register
   80b8c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   80b90:	4b03      	ldr	r3, [pc, #12]	; (80ba0 <init_output+0x14>)
   80b92:	611a      	str	r2, [r3, #16]
		
		PIOC->PIO_PER	=	PIO_PC17 | PIO_PC23 | PIO_PC19 | PIO_PC28;				// PIO Enable Register			-	Enables the pin
   80b94:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
   80b98:	4a02      	ldr	r2, [pc, #8]	; (80ba4 <init_output+0x18>)
   80b9a:	601a      	str	r2, [r3, #0]
		PIOC->PIO_OER	=	PIO_PC17 | PIO_PC23 | PIO_PC19 | PIO_PC28;				// Output Enable Register		-	Set pin PC23 as output
   80b9c:	611a      	str	r2, [r3, #16]
   80b9e:	4770      	bx	lr
   80ba0:	400e0600 	.word	0x400e0600
   80ba4:	108a0000 	.word	0x108a0000

00080ba8 <main>:

void waste_of_time_delay(uint32_t delay);	// Time delay
void init_output(void);

int main (void)
{
   80ba8:	b508      	push	{r3, lr}
	// Insert system clock initialization code here (sysclk_init()). 
	sysclk_init();
   80baa:	4b0a      	ldr	r3, [pc, #40]	; (80bd4 <main+0x2c>)
   80bac:	4798      	blx	r3
	board_init();
   80bae:	4b0a      	ldr	r3, [pc, #40]	; (80bd8 <main+0x30>)
   80bb0:	4798      	blx	r3
	
	uart_init();
   80bb2:	4b0a      	ldr	r3, [pc, #40]	; (80bdc <main+0x34>)
   80bb4:	4798      	blx	r3
	timers_init1();
   80bb6:	4b0a      	ldr	r3, [pc, #40]	; (80be0 <main+0x38>)
   80bb8:	4798      	blx	r3
	timers_init2();
   80bba:	4b0a      	ldr	r3, [pc, #40]	; (80be4 <main+0x3c>)
   80bbc:	4798      	blx	r3
	timers_init3();
   80bbe:	4b0a      	ldr	r3, [pc, #40]	; (80be8 <main+0x40>)
   80bc0:	4798      	blx	r3
	timers_init4();
   80bc2:	4b0a      	ldr	r3, [pc, #40]	; (80bec <main+0x44>)
   80bc4:	4798      	blx	r3
	timers_init9();
   80bc6:	4b0a      	ldr	r3, [pc, #40]	; (80bf0 <main+0x48>)
   80bc8:	4798      	blx	r3
	interrupts_init1();
   80bca:	4b0a      	ldr	r3, [pc, #40]	; (80bf4 <main+0x4c>)
   80bcc:	4798      	blx	r3
	init_output();
   80bce:	4b0a      	ldr	r3, [pc, #40]	; (80bf8 <main+0x50>)
   80bd0:	4798      	blx	r3
   80bd2:	e7fe      	b.n	80bd2 <main+0x2a>
   80bd4:	000804f9 	.word	0x000804f9
   80bd8:	0008055d 	.word	0x0008055d
   80bdc:	000804d9 	.word	0x000804d9
   80be0:	00080335 	.word	0x00080335
   80be4:	00080365 	.word	0x00080365
   80be8:	00080395 	.word	0x00080395
   80bec:	000803c9 	.word	0x000803c9
   80bf0:	000803f9 	.word	0x000803f9
   80bf4:	000801a1 	.word	0x000801a1
   80bf8:	00080b8d 	.word	0x00080b8d

00080bfc <__libc_init_array>:
   80bfc:	b570      	push	{r4, r5, r6, lr}
   80bfe:	4e0f      	ldr	r6, [pc, #60]	; (80c3c <__libc_init_array+0x40>)
   80c00:	4d0f      	ldr	r5, [pc, #60]	; (80c40 <__libc_init_array+0x44>)
   80c02:	1b76      	subs	r6, r6, r5
   80c04:	10b6      	asrs	r6, r6, #2
   80c06:	bf18      	it	ne
   80c08:	2400      	movne	r4, #0
   80c0a:	d005      	beq.n	80c18 <__libc_init_array+0x1c>
   80c0c:	3401      	adds	r4, #1
   80c0e:	f855 3b04 	ldr.w	r3, [r5], #4
   80c12:	4798      	blx	r3
   80c14:	42a6      	cmp	r6, r4
   80c16:	d1f9      	bne.n	80c0c <__libc_init_array+0x10>
   80c18:	4e0a      	ldr	r6, [pc, #40]	; (80c44 <__libc_init_array+0x48>)
   80c1a:	4d0b      	ldr	r5, [pc, #44]	; (80c48 <__libc_init_array+0x4c>)
   80c1c:	f000 f890 	bl	80d40 <_init>
   80c20:	1b76      	subs	r6, r6, r5
   80c22:	10b6      	asrs	r6, r6, #2
   80c24:	bf18      	it	ne
   80c26:	2400      	movne	r4, #0
   80c28:	d006      	beq.n	80c38 <__libc_init_array+0x3c>
   80c2a:	3401      	adds	r4, #1
   80c2c:	f855 3b04 	ldr.w	r3, [r5], #4
   80c30:	4798      	blx	r3
   80c32:	42a6      	cmp	r6, r4
   80c34:	d1f9      	bne.n	80c2a <__libc_init_array+0x2e>
   80c36:	bd70      	pop	{r4, r5, r6, pc}
   80c38:	bd70      	pop	{r4, r5, r6, pc}
   80c3a:	bf00      	nop
   80c3c:	00080d4c 	.word	0x00080d4c
   80c40:	00080d4c 	.word	0x00080d4c
   80c44:	00080d54 	.word	0x00080d54
   80c48:	00080d4c 	.word	0x00080d4c

00080c4c <register_fini>:
   80c4c:	4b02      	ldr	r3, [pc, #8]	; (80c58 <register_fini+0xc>)
   80c4e:	b113      	cbz	r3, 80c56 <register_fini+0xa>
   80c50:	4802      	ldr	r0, [pc, #8]	; (80c5c <register_fini+0x10>)
   80c52:	f000 b805 	b.w	80c60 <atexit>
   80c56:	4770      	bx	lr
   80c58:	00000000 	.word	0x00000000
   80c5c:	00080c6d 	.word	0x00080c6d

00080c60 <atexit>:
   80c60:	2300      	movs	r3, #0
   80c62:	4601      	mov	r1, r0
   80c64:	461a      	mov	r2, r3
   80c66:	4618      	mov	r0, r3
   80c68:	f000 b814 	b.w	80c94 <__register_exitproc>

00080c6c <__libc_fini_array>:
   80c6c:	b538      	push	{r3, r4, r5, lr}
   80c6e:	4d07      	ldr	r5, [pc, #28]	; (80c8c <__libc_fini_array+0x20>)
   80c70:	4c07      	ldr	r4, [pc, #28]	; (80c90 <__libc_fini_array+0x24>)
   80c72:	1b2c      	subs	r4, r5, r4
   80c74:	10a4      	asrs	r4, r4, #2
   80c76:	d005      	beq.n	80c84 <__libc_fini_array+0x18>
   80c78:	3c01      	subs	r4, #1
   80c7a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   80c7e:	4798      	blx	r3
   80c80:	2c00      	cmp	r4, #0
   80c82:	d1f9      	bne.n	80c78 <__libc_fini_array+0xc>
   80c84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   80c88:	f000 b864 	b.w	80d54 <_fini>
   80c8c:	00080d64 	.word	0x00080d64
   80c90:	00080d60 	.word	0x00080d60

00080c94 <__register_exitproc>:
   80c94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   80c98:	4c25      	ldr	r4, [pc, #148]	; (80d30 <__register_exitproc+0x9c>)
   80c9a:	4606      	mov	r6, r0
   80c9c:	6825      	ldr	r5, [r4, #0]
   80c9e:	4688      	mov	r8, r1
   80ca0:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
   80ca4:	4692      	mov	sl, r2
   80ca6:	4699      	mov	r9, r3
   80ca8:	b3c4      	cbz	r4, 80d1c <__register_exitproc+0x88>
   80caa:	6860      	ldr	r0, [r4, #4]
   80cac:	281f      	cmp	r0, #31
   80cae:	dc17      	bgt.n	80ce0 <__register_exitproc+0x4c>
   80cb0:	1c41      	adds	r1, r0, #1
   80cb2:	b176      	cbz	r6, 80cd2 <__register_exitproc+0x3e>
   80cb4:	eb04 0380 	add.w	r3, r4, r0, lsl #2
   80cb8:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
   80cbc:	f8d4 5188 	ldr.w	r5, [r4, #392]	; 0x188
   80cc0:	2201      	movs	r2, #1
   80cc2:	4082      	lsls	r2, r0
   80cc4:	4315      	orrs	r5, r2
   80cc6:	2e02      	cmp	r6, #2
   80cc8:	f8c4 5188 	str.w	r5, [r4, #392]	; 0x188
   80ccc:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
   80cd0:	d01e      	beq.n	80d10 <__register_exitproc+0x7c>
   80cd2:	1c83      	adds	r3, r0, #2
   80cd4:	6061      	str	r1, [r4, #4]
   80cd6:	2000      	movs	r0, #0
   80cd8:	f844 8023 	str.w	r8, [r4, r3, lsl #2]
   80cdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   80ce0:	4b14      	ldr	r3, [pc, #80]	; (80d34 <__register_exitproc+0xa0>)
   80ce2:	b303      	cbz	r3, 80d26 <__register_exitproc+0x92>
   80ce4:	f44f 70c8 	mov.w	r0, #400	; 0x190
   80ce8:	f3af 8000 	nop.w
   80cec:	4604      	mov	r4, r0
   80cee:	b1d0      	cbz	r0, 80d26 <__register_exitproc+0x92>
   80cf0:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
   80cf4:	2700      	movs	r7, #0
   80cf6:	e884 0088 	stmia.w	r4, {r3, r7}
   80cfa:	4638      	mov	r0, r7
   80cfc:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   80d00:	2101      	movs	r1, #1
   80d02:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
   80d06:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
   80d0a:	2e00      	cmp	r6, #0
   80d0c:	d0e1      	beq.n	80cd2 <__register_exitproc+0x3e>
   80d0e:	e7d1      	b.n	80cb4 <__register_exitproc+0x20>
   80d10:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   80d14:	431a      	orrs	r2, r3
   80d16:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   80d1a:	e7da      	b.n	80cd2 <__register_exitproc+0x3e>
   80d1c:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
   80d20:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   80d24:	e7c1      	b.n	80caa <__register_exitproc+0x16>
   80d26:	f04f 30ff 	mov.w	r0, #4294967295
   80d2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   80d2e:	bf00      	nop
   80d30:	00080d3c 	.word	0x00080d3c
   80d34:	00000000 	.word	0x00000000
   80d38:	00000043 	.word	0x00000043

00080d3c <_global_impure_ptr>:
   80d3c:	20070130                                0.. 

00080d40 <_init>:
   80d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80d42:	bf00      	nop
   80d44:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80d46:	bc08      	pop	{r3}
   80d48:	469e      	mov	lr, r3
   80d4a:	4770      	bx	lr

00080d4c <__init_array_start>:
   80d4c:	00080c4d 	.word	0x00080c4d

00080d50 <__frame_dummy_init_array_entry>:
   80d50:	00080119                                ....

00080d54 <_fini>:
   80d54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80d56:	bf00      	nop
   80d58:	bcf8      	pop	{r3, r4, r5, r6, r7}
   80d5a:	bc08      	pop	{r3}
   80d5c:	469e      	mov	lr, r3
   80d5e:	4770      	bx	lr

00080d60 <__fini_array_start>:
   80d60:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
20070038:	4a14      	ldr	r2, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b13      	ldr	r3, [r2, #48]	; 0x30
2007003c:	f023 0303 	bic.w	r3, r3, #3
20070040:	f043 0301 	orr.w	r3, r3, #1
20070044:	6313      	str	r3, [r2, #48]	; 0x30
20070046:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070048:	f013 0f08 	tst.w	r3, #8
2007004c:	d0fb      	beq.n	20070046 <SystemInit+0x46>
2007004e:	4a12      	ldr	r2, [pc, #72]	; (20070098 <SystemInit+0x98>)
20070050:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070052:	629a      	str	r2, [r3, #40]	; 0x28
20070054:	461a      	mov	r2, r3
20070056:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070058:	f013 0f02 	tst.w	r3, #2
2007005c:	d0fb      	beq.n	20070056 <SystemInit+0x56>
2007005e:	2211      	movs	r2, #17
20070060:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070062:	631a      	str	r2, [r3, #48]	; 0x30
20070064:	461a      	mov	r2, r3
20070066:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070068:	f013 0f08 	tst.w	r3, #8
2007006c:	d0fb      	beq.n	20070066 <SystemInit+0x66>
2007006e:	2212      	movs	r2, #18
20070070:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070072:	631a      	str	r2, [r3, #48]	; 0x30
20070074:	461a      	mov	r2, r3
20070076:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070078:	f013 0f08 	tst.w	r3, #8
2007007c:	d0fb      	beq.n	20070076 <SystemInit+0x76>
2007007e:	4a07      	ldr	r2, [pc, #28]	; (2007009c <SystemInit+0x9c>)
20070080:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070082:	601a      	str	r2, [r3, #0]
20070084:	4770      	bx	lr
20070086:	bf00      	nop
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	2007012c 	.word	0x2007012c

200700a4 <system_init_flash>:
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <SystemCoreClock>:
2007012c:	003d0900                                ..=.

20070130 <impure_data>:
20070130:	00000000 2007041c 20070484 200704ec     ....... ... ... 
	...
20070164:	00080d38 00000000 00000000 00000000     8...............
	...
200701d8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701e8:	0005deec 0000000b 00000000 00000000     ................
	...
